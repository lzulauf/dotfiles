[user]
	name = Luke Zulauf
	email = luke.zulauf@benchling.com
[core]
	excludesfile = /Users/luke.zulauf/.gitignore_global
	trustctime = false
[credential]
	helper = osxkeychain
[merge]
	tool = vimdiff
	conflictstyle = diff3
[diff]
	guitool = opendiff
	tool = vimdiff
[color]
	ui = true
[push]
	default = simple
[difftool]
	prompt = false
[difftool "p4d"]
	cmd = /Applications/p4merge.app/Contents/Resources/launchp4merge "$LOCAL" "$REMOTE"
	keepTemporaries = false
	trustExitCode = false
	keepBackup = false
[difftool "diffmerge"]
	cmd = /Applications/DiffMerge/Contents/MacOS/DiffMerge "$LOCAL" "$REMOTE"
	keepTemporaries = false
	trustExitCode = false
	keepBackup = false
[difftool "difftastic"]
  cmd = difft --color=always "$LOCAL" "$REMOTE"
	keepTemporaries = false
	trustExitCode = false
	keepBackup = false
[mergetool "p4m"]
	cmd = /Applications/p4merge.app/Contents/Resources/launchp4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
	keepTemporaries = false
	trustExitCode = false
	keepBackup = false
[mergetool "diffmerge"]
  cmd = /Applications/DiffMerge/Contents/MacOS/DiffMerge --merge --result="$MERGED" "$LOCAL" "$(if test -f "$BASE"; then echo "$BASE"; else echo "$LOCAL"; fi)" "$REMOTE"'
	keepTemporaries = false
	trustExitCode = false
	keepBackup = false
[gist]
	private = true
[alias]
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
	branch-history = for-each-ref --count=20 --sort=-committerdate refs/heads/ --format=\\'%(refname:short)\\'
	bug-branch = "!f() { git fetch; git checkout -b $1 ; git push --set-upstream origin $1; }; f"
	conflicts = diff --name-only --diff-filter=U
	delete-merged-branches = "!git checkout master && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
	delete-merged-branches-force = "!git checkout master && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -D"
	modified = ls-files -m
	p4m = mergetool -t p4m
	patch = format-patch
	print = "!f() { git show \"$1\":\"${GIT_PREFIX}$2\"; }; f"
	push-skip = "!SKIP_PRE_PUSH_CHECKS=1 git push"
	rebase-squash = "!git rebase -i `git merge-base origin/master HEAD`"
	switcher = !git_switch.py
	tree = "!tree --prune -I `cat .gitignore ~/.gitignore_global | egrep -v '^#.*$|^[[:space:]]*$' | tr '\n' '|'`"
	unstage = reset HEAD
	ignored = "!f() { \
		find $@ | git check-ignore --stdin; \
	}; f"
[pull]
	ff = true
	rebase = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[init]
	defaultBranch = main
[include]
	path = ~/.benchling-dotfiles/.gitconfig
[includeIf "gitdir:/src/"]
	path = ~/.config/.gitconfig
[feature]
	manyFiles = true
[fetch]
	writeCommitGraph = true
